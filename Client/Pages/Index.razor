@page "/"
@using System.Dynamic;

<SfGrid DataSource="@Orders">
    <GridColumns>
        <GridColumn Field="OrderID"
                    HeaderText="Order ID"
                    TextAlign="TextAlign.Right"
                    Width="120">
        </GridColumn>
        <GridColumn Field="CustomerID"
                    HeaderText="Customer Name"
                    Width="150">
        </GridColumn>
        <GridColumn Field="OrderDate"
                    HeaderText=" Order Date"
                    EditType="EditType.DatePickerEdit"
                    TextAlign="TextAlign.Right"
                    Format="d"
                    Type="ColumnType.Date"
                    Width="130">
        </GridColumn>
        <GridColumn Field="Freight"
                    HeaderText="Freight"
                    Format="C2"
                    TextAlign="TextAlign.Right"
                    Width="120">
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {
    public List<OrderDetails> Orders { get; set; } = new List<OrderDetails>();

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 12).Select((x) =>
        {
            dynamic dynamicObj = new OrderDetails();
            dynamicObj.OrderID = 1000 + x;
            dynamicObj.CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })
            [new Random().Next(5)];
            dynamicObj.Freight = 2.1 * x;
            dynamicObj.OrderDate = DateTime.Now.AddDays(-x);
            return dynamicObj;
        }).Cast<OrderDetails>().ToList<OrderDetails>();
    }

    public class OrderDetails : DynamicObject
    {
        Dictionary<string, object> OrdersDictionary = new Dictionary<string, object>();

        public override bool TryGetMember(GetMemberBinder binder, out object result)
        {
            string name = binder.Name;
            return OrdersDictionary.TryGetValue(name, out result);
        }

        public override bool TrySetMember(SetMemberBinder binder, object value)
        {
            OrdersDictionary[binder.Name] = value;
            return true;
        }

        public override IEnumerable<string> GetDynamicMemberNames()
        {
            return this.OrdersDictionary?.Keys;
        }

        //Expando Object Binding
        //public List<ExpandoObject> Orders { get; set; } = new List<ExpandoObject>();

        //protected override void OnInitialized()
        //{
        //    Orders = Enumerable.Range(1, 12).Select((x) =>
        //    {
        //        dynamic dynamicObj = new ExpandoObject();
        //        dynamicObj.OrderID = 1000 + x;
        //        dynamicObj.CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })
        //        [new Random().Next(5)];
        //        dynamicObj.Freight = 2.1 * x;
        //        dynamicObj.OrderDate = DateTime.Now.AddDays(-x);
        //        return dynamicObj;
        //    }).Cast<ExpandoObject>().ToList<ExpandoObject>();
        //}
    }
}

